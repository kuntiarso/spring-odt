# server properties
server.port=43202
# spring properties
spring.application.name=virtualaccountservice
spring.banner.location=classpath:application-banner.txt
# kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=va-event-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages="com.developer.superuser.*"
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.listener.auto-startup=false
# doku properties
doku.api.key=SK-47OFLHdt2f4rY5nLuTFW
doku.api.base-url=https://api-sandbox.doku.com
doku.api.client-id=BRN-0287-1748622057599
doku.api.endpoint.va-create=/virtual-accounts/bi-snap-va/v1.1/transfer-va/create-va
doku.api.endpoint.va-update=/virtual-accounts/bi-snap-va/v1.1/transfer-va/update-va
doku.api.endpoint.va-delete=/virtual-accounts/bi-snap-va/v1.1/transfer-va/delete-va
doku.api.endpoint.va-payment-callback=/v1.1/transfer-va/payment
doku.api.endpoint.va-direct-create=/v1/transfer-va/inquiry
doku.api.endpoint.va-direct-payment-callback=/v1/transfer-va/payment
# kafka topic properties
kafka.topic.consumer.va-payment-requested=va-payment-requested
kafka.topic.producer.va-payment-created=va-payment-created