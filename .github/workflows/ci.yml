name: Build and Push Spring ODT Services to GHCR

on:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - 'token-service/**'
      - 'virtual-account-service/**'
      - 'payment-service/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        service:
          - token-service
          - virtual-account-service
          - payment-service
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup java 21 temurin
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: temurin

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles(format('{0}/pom.xml', matrix.service)) }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Check for change in ${{ matrix.service }}
        id: service_change
        run: |
          if git diff --quiet HEAD^ HEAD -- '${{ matrix.service }}/'; then
            echo "result=false" >> $GITHUB_OUTPUT
          else
            echo "result=true" >> $GITHUB_OUTPUT
          fi

      - name: Configure maven settings.xml
        if: steps.service_change.outputs.result == 'true'
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.repository_owner }}</username>
                <password>${{ secrets.GH_PACKAGE_PAT }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Setup service name
        id: service_name
        if: steps.service_change.outputs.result == 'true'
        run: |
          original_name="${{ matrix.service }}"
          echo "original service name: ${original_name}"
          trimmed_name="${original_name//-/}"
          echo "trimmed service name: ${trimmed_name}"
          echo "result=$trimmed_name" >> $GITHUB_OUTPUT

      - name: Build service jar
        if: steps.service_change.outputs.result == 'true'
        working-directory: ${{ matrix.service }}
        run: |
          ./mvnw dependency:purge-local-repository -DmanualInclude="com.developer.superuser:shared-library:1.0.0" -DreResolve=true
          ./mvnw clean install -DskipTests

      - name: Login to GHCR
        if: steps.service_change.outputs.result == 'true'
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build and push image to GHCR
        if: steps.service_change.outputs.result == 'true'
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/spring-odt-${{ steps.service_name.outputs.result }}
          TAG: ${GITHUB_SHA::8}
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.TAG }} ${{ matrix.service }}/
          docker push ${{ env.IMAGE_NAME }}:${{ env.TAG }}
          docker tag ${{ env.IMAGE_NAME }}:${{ env.TAG }} ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Cleanup old GHCR tags
        if: steps.service_change.outputs.result == 'true'
        env:
          IMAGE_NAME: spring-odt-${{ steps.service_name.outputs.result }}
        run: |
          PACKAGE_IDS=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/users/${{ github.repository_owner }}/packages/container/${{ env.IMAGE_NAME }}/versions" \
            | jq -r --arg tag "${GITHUB_SHA::8}" '[.[] | select(.metadata.container.tags != null) | select((.metadata.container.tags | index("latest") | not) and (.metadata.container.tags | index($tag) | not)) | .id] | join(" ")')

          if [ -n "${PACKAGE_IDS}" ]; then
            echo "Deleting old versions: ${PACKAGE_IDS}"
            for id in ${PACKAGE_IDS}; do
              curl -X DELETE \
                -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" \
                "https://api.github.com/users/${{ github.repository_owner }}/packages/container/${{ env.IMAGE_NAME }}/versions/${id}" \
                || echo "Failed to delete ${id}"
            done
          else
            echo "No old versions to delete"
          fi